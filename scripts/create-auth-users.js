// =====================================================
// SCRIPT PARA CREAR USUARIOS DE AUTENTICACI√ìN - SAD LAS V2
// =====================================================

import { createClient } from '@supabase/supabase-js'
import dotenv from 'dotenv'

// Cargar variables de entorno
dotenv.config({ path: '.env.local' })

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå Error: Variables de Supabase no configuradas')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseAnonKey)

async function createAuthUsers() {
  console.log('üîß Creando usuarios de autenticaci√≥n...')

  try {
    const testUsers = [
      {
        email: 'superadmin@sadlas.com',
        password: 'TempPass123!',
        full_name: 'Mar√≠a Garc√≠a L√≥pez'
      },
      {
        email: 'admin@sadlas.com',
        password: 'TempPass123!',
        full_name: 'Ana Mart√≠nez Rodr√≠guez'
      }
    ]
    
    for (const testUser of testUsers) {
      console.log(`üìù Intentando crear usuario: ${testUser.email}`)
      
      // Intentar registro
      const { data, error } = await supabase.auth.signUp({
        email: testUser.email,
        password: testUser.password,
        options: {
          data: {
            full_name: testUser.full_name
          }
        }
      })
      
      if (error) {
        console.log(`‚ùå Error al crear ${testUser.email}: ${error.message}`)
        
        // Si el usuario ya existe, intentar hacer login para verificar
        console.log(`üîç Verificando si ${testUser.email} ya existe...`)
        const { data: loginData, error: loginError } = await supabase.auth.signInWithPassword({
          email: testUser.email,
          password: testUser.password
        })
        
        if (loginError) {
          console.log(`‚ùå No se puede hacer login con ${testUser.email}: ${loginError.message}`)
        } else {
          console.log(`‚úÖ Login exitoso con ${testUser.email}`)
          // Cerrar sesi√≥n
          await supabase.auth.signOut()
        }
      } else {
        console.log(`‚úÖ Usuario creado: ${testUser.email}`)
        console.log(`   ID: ${data.user?.id}`)
        console.log(`   Confirmado: ${data.user?.email_confirmed_at ? 'S√≠' : 'No'}`)
      }
    }

    console.log('\nüéâ Proceso completado')
    console.log('\nüìã Pr√≥ximos pasos:')
    console.log('1. Si los usuarios se crearon pero no est√°n confirmados, verifica tu email')
    console.log('2. Si hay errores, puedes crear los usuarios manualmente en el dashboard de Supabase')
    console.log('3. Prueba hacer login con las credenciales')

  } catch (error) {
    console.error('‚ùå Error general:', error)
  }
}

// Ejecutar el script
createAuthUsers()
  .then(() => {
    console.log('‚úÖ Script completado')
    process.exit(0)
  })
  .catch((error) => {
    console.error('‚ùå Error en script:', error)
    process.exit(1)
  }) 